{"ast":null,"code":"var _jsxFileName = \"/home/afnaan/FusionDb-afnaan-/react-firebase-auth-boilerplate/src/contexts/authContext/index.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase/firebase\";\n// import { GoogleAuthProvider } from \"firebase/auth\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n  const [isEmailUser, setIsEmailUser] = useState(false);\n  const [isGoogleUser, setIsGoogleUser] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, initializeUser);\n    return unsubscribe;\n  }, []);\n  async function initializeUser(user) {\n    if (user) {\n      setCurrentUser({\n        ...user\n      });\n\n      // check if provider is email and password login\n      const isEmail = user.providerData.some(provider => provider.providerId === \"password\");\n      setIsEmailUser(isEmail);\n\n      // check if the auth provider is google or not\n      //   const isGoogle = user.providerData.some(\n      //     (provider) => provider.providerId === GoogleAuthProvider.PROVIDER_ID\n      //   );\n      //   setIsGoogleUser(isGoogle);\n\n      setUserLoggedIn(true);\n    } else {\n      setCurrentUser(null);\n      setUserLoggedIn(false);\n    }\n    setLoading(false);\n  }\n  const value = {\n    userLoggedIn,\n    isEmailUser,\n    isGoogleUser,\n    currentUser,\n    setCurrentUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"SciOw3mLYcA7WBHU9UufiG14P4s=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useContext","useState","useEffect","auth","onAuthStateChanged","jsxDEV","_jsxDEV","AuthContext","createContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","userLoggedIn","setUserLoggedIn","isEmailUser","setIsEmailUser","isGoogleUser","setIsGoogleUser","loading","setLoading","unsubscribe","initializeUser","user","isEmail","providerData","some","provider","providerId","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/afnaan/FusionDb-afnaan-/react-firebase-auth-boilerplate/src/contexts/authContext/index.jsx"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase/firebase\";\n// import { GoogleAuthProvider } from \"firebase/auth\";\nimport { onAuthStateChanged } from \"firebase/auth\";\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userLoggedIn, setUserLoggedIn] = useState(false);\n  const [isEmailUser, setIsEmailUser] = useState(false);\n  const [isGoogleUser, setIsGoogleUser] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, initializeUser);\n    return unsubscribe;\n  }, []);\n\n  async function initializeUser(user) {\n    if (user) {\n\n      setCurrentUser({ ...user });\n\n      // check if provider is email and password login\n      const isEmail = user.providerData.some(\n        (provider) => provider.providerId === \"password\"\n      );\n      setIsEmailUser(isEmail);\n\n      // check if the auth provider is google or not\n    //   const isGoogle = user.providerData.some(\n    //     (provider) => provider.providerId === GoogleAuthProvider.PROVIDER_ID\n    //   );\n    //   setIsGoogleUser(isGoogle);\n\n      setUserLoggedIn(true);\n    } else {\n      setCurrentUser(null);\n      setUserLoggedIn(false);\n    }\n\n    setLoading(false);\n  }\n\n  const value = {\n    userLoggedIn,\n    isEmailUser,\n    isGoogleUser,\n    currentUser,\n    setCurrentUser\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC9D,SAASC,IAAI,QAAQ,yBAAyB;AAC9C;AACA,SAASC,kBAAkB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,gBAAGR,KAAK,CAACS,aAAa,CAAC,CAAC;AAEzC,OAAO,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,OAAOV,UAAU,CAACO,WAAW,CAAC;AAChC;AAACG,EAAA,CAFeD,OAAO;AAIvB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMsB,WAAW,GAAGpB,kBAAkB,CAACD,IAAI,EAAEsB,cAAc,CAAC;IAC5D,OAAOD,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeC,cAAcA,CAACC,IAAI,EAAE;IAClC,IAAIA,IAAI,EAAE;MAERX,cAAc,CAAC;QAAE,GAAGW;MAAK,CAAC,CAAC;;MAE3B;MACA,MAAMC,OAAO,GAAGD,IAAI,CAACE,YAAY,CAACC,IAAI,CACnCC,QAAQ,IAAKA,QAAQ,CAACC,UAAU,KAAK,UACxC,CAAC;MACDZ,cAAc,CAACQ,OAAO,CAAC;;MAEvB;MACF;MACA;MACA;MACA;;MAEEV,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,MAAM;MACLF,cAAc,CAAC,IAAI,CAAC;MACpBE,eAAe,CAAC,KAAK,CAAC;IACxB;IAEAM,UAAU,CAAC,KAAK,CAAC;EACnB;EAEA,MAAMS,KAAK,GAAG;IACZhB,YAAY;IACZE,WAAW;IACXE,YAAY;IACZN,WAAW;IACXC;EACF,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAApB,QAAA,EAChC,CAACU,OAAO,IAAIV;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B;AAACxB,GAAA,CAnDeF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}